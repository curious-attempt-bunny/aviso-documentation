---
title: Binary Output
---

The `io.aviso.binary` namespace provides support output of binary data.

Binary data is represented using the protocol BinaryData; this protocol is extended on byte arrays, on String, and on nil.
BinaryData is simply a randomly accessible collection of bytes, with a known length.

```clojure
(write-binary "Choose immutability and see where it takes you.")
```

```
0000: 43 68 6F 6F 73 65 20 69 6D 6D 75 74 61 62 69 6C 69 74 79 20 61 6E 64 20 73 65 65 20 77 68 65 72
0020: 65 20 69 74 20 74 61 6B 65 73 20 79 6F 75 2E
```

`write-binary` can write to a `java.io.Writer` (defaulting to `*out*`) or a `StringBuilder`(or other things, as
defined by `io.aviso.writer/StringWriter` protocol).
The full version explicitly specifies where to write to, as well as options:

image::https://www.evernote.com/shard/s54/sh/4211f62b-dec6-4134-be0b-5c7f9261a84f/c488966c5ea16355ce50445401a965e9/deep/0/exception.clj----pretty----pretty------workspaces-annadale-pretty-.png[]

Alternately, `format-binary` will return the formatted binary output string.

You can also compare two binary data values with `write-binary-delta`:

image::https://www.evernote.com/shard/s54/sh/05f24753-85e7-49a5-a3f1-99e5a2ba1208/b552e99f243ce5a2dc35a734379a0b9b/deep/0/io.aviso.binary----pretty----pretty------workspaces-annadale-pretty-.png[]

If the two data are of different lengths, the shorter one is padded with `--` to make up the difference.

As with `write-binary`, there's a `format-binary-delta`, and a three-argument version of `write-binary-delta` for specifying a StringWriter target.
